{"version":3,"sources":["assets/pencil.svg","assets/fill.svg","assets/rectangle.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","ctx","setctx","Ispainting","setIspainting","click","setclick","value","setvalue","name","setname","img","setimg","useEffect","canvas","document","getElementById","height","window","innerHeight","width","innerWidth","context","getContext","im","startpath","e","paint","rect","target","getBoundingClientRect","mosetxl","clientX","left","mosetxr","clientY","top","lineWidth","lineCap","strokeStyle","lineTo","stroke","beginPath","moveTo","fillRect","fillStyle","clearRect","style","position","id","onMouseDown","zIndex","cursor","overflow","src","border","onMouseUp","onMouseMove","display","alignItems","justifyContent","onClick","tool1","tool3","tool2","type","onChange","min","max","event","files","URL","createObjectURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc4187a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pencil.962e7af9.svg\";","export default __webpack_public_path__ + \"static/media/fill.4e211ed6.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.5112e12f.svg\";","import React, {useState,useEffect}  from 'react';\n\nimport tool1 from './assets/pencil.svg';\nimport tool2 from './assets/fill.svg';\nimport tool3 from './assets/rectangle.svg';\nfunction App() {\n  const [ctx, setctx]= useState();\n  const [Ispainting,setIspainting]= useState(false);\n  const [click, setclick]= useState();\n  const [value,setvalue]=useState('');\n  const [name, setname]= useState();\n  const [img,setimg]= useState(null);\n  const [imagees,setimgees]= useState()\n  \n  useEffect(()=>{\n    if(img === null){const  canvas= document.getElementById('canvas');\n    canvas.height = window.innerHeight- 100;\n    canvas.width = window.innerWidth ;\n    const context= canvas.getContext('2d');\n    setctx(context)}\n      if(img !== null){\n        const im= document.getElementById('im');\n        im.height = window.innerHeight- 100;\n        im.width = window.innerWidth ;\n        \n      }\n      \n  },[img])\n  const startpath=(e)=>{\n    setIspainting(true);\n    paint(e);\n    \n}\nconst endpath= (e)=>{\n    setIspainting(false);\n ctx.beginPath()\n}\nconst paint=(e)=>{\n  let rect = e.target.getBoundingClientRect();\n  \n   let mosetxl = e.clientX - rect.left;\n   let mosetxr = e.clientY - rect.top;\n   if(Ispainting){\n     switch(click){\n        case \"path\":{\n          ctx.lineWidth = name;\n          ctx.lineCap = \"round\";\n          ctx.strokeStyle=value ;\n      \n          \n  \n         ctx.lineTo(mosetxl, mosetxr);\n         ctx.stroke();\n  \n         ctx.beginPath();\n         ctx.moveTo(mosetxl, mosetxr);\n        }\n        break;\n        case \"fill\":{\n          ctx.fillRect(e.clientX-60, e.clientY-60,mosetxl,mosetxr);\n          ctx.fillStyle = value\n        }\n        break;\n        case 'stroke':{\n          ctx.clearRect(e.clientX, e.clientY,mosetxl,mosetxr)\n        }\n        break;\n        default: break\n     }\n   }\n}\n   const imagehandller =(event)=>{\n     if(event.target.files && event.target.files[0]){\n       let im= event.target.files[0];\n       setimg( URL.createObjectURL(im))\n     }\n   }\n   const pakhanddler=()=>{\n     setimg(null);\n   }\n    return (\n      \n      <div style={{position:\"relative\"}}>\n       {img?<img \n       \n       id='im'onMouseDown={startpath}\n         style={{zIndex:100,position:\"absolute\",cursor:'pointer',overflow:'scroll'}} src={img} ></img>:null}\n       <canvas style={{border: '1px solid #111'}}\n        id=\"canvas\"\n        \n        onMouseDown={startpath}\n        onMouseUp={endpath}\n        onMouseMove={paint}\n        ></canvas>\n        <div style={{width:'100%',\n      display:\"flex\",alignItems: \"center\", justifyContent: \"space-around\"}}>\n        <button onClick={()=>setclick('path')} ><img src={tool1} /></button>\n        <button onClick={()=>setclick('fill')} ><img src={tool3} /></button>\n        <button onClick={()=>setclick('stroke')} ><img src={tool2} /></button>\n        <input type='color' value={value} onChange={e=>setvalue(e.target.value)} />\n        <input type=\"range\" min=\"3\" max=\"16\" value={name} onChange={e=>setname(\n    e.target.value)}/>\n    <input type=\"file\" name=\"file\"   onChange={imagehandller}  />\n    {img?<button onClick={pakhanddler}>پاک کردن عکس</button>:null}\n    </div>\n    \n      </div>\n     \n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}